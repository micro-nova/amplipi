#!/usr/bin/python3
import sys
import time
import re
import argparse
import os

# parse the log file generated by gmrender-resurrect, extracting out the track info

# TODO: dlna generates state update events to subscribers, in the future we should use this method instead
# Check out https://github.com/hzeller/upnp-display/blob/master/controller-state.cc for details

# args = sys.argv[1:]
# print('Input Arguments: {}'.format(args[0]))
# try:
#     src = int(args[0])
#     loc = '/home/pi/config/dlna/{}/'.format(src)
# except:
#     print('Error: Invalid source choice. Sources range from 0 to 3. Please try again.')
#     sys.exit('Failure.')
# print('Targeting {}'.format(loc))
# cs_loc = loc + 'currentSong'
parser = argparse.ArgumentParser(description="dlna metadata interpreter")
parser.add_argument('dlna_config_dir', description='directory used for dlna song info generation')
args = parser.parse_args()

# Check if the folder is valid and writeable
if not os.path.exists(args.dlna_config_dir) or not os.access(args.dlna_config_dir, os.W_OK):
  print('Error: unable to access: {}'.format(args.dlna_config_dir))

# trim trailing /
if args.dlna_config_dir[-1] == '/':
  args.dlna_config_dir = args.dlna_config_dir[:-1]

cs_loc = '{}/currentSong'.format(args.dlna_config_dir)
cs_conf = {
    'state': 'playing'
}
ctmd = re.compile(r'dc:(.*?)>(.*?)</dc:|upnp:(.*?)>(.*?)</upnp:')
ts = re.compile(r'TransportState: ([A-Z]*)')

def read_field():
    line = sys.stdin.readline()
    line = line.strip('\n')
    if line[0:4] == "INFO":
        s1 = line.split('] ')
        return s1[1]
    else:
        return None

def meta_parser(fstring):
    u = {}
    for m in ts.finditer(fstring):
        if m[1]:
            phs = m[1].lower()
            u['state'] = phs
    for n in ctmd.finditer(fstring):
        if n[1]:
            u[n[1]] = n[2]
        else:
            u[n[3]] = n[4]
    return u

f = open(cs_loc, 'w')
f.write("")
f.close()

while True:
    field = read_field()
    if field:
        cs_conf.update(meta_parser(field))
        print(cs_conf)
        f = open(cs_loc, 'w')
        f.write(str(cs_conf))
        f.close()
